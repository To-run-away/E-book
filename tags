!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AddFontOperateForEncoding	encoding/encoding_manage.c	/^int AddFontOperateForEncoding(PT_EncodingOperate ptEncodingOperate,PT_FontOperate ptFontOperate)$/;"	f
AnsiEncodingInit	encoding/ansi.c	/^int AnsiEncodingInit(void)$/;"	f
AnsiGetCodeFromBuf	encoding/ansi.c	/^static int AnsiGetCodeFromBuf(unsigned char *pucStartBuf, unsigned char *pucEndBuf, unsigned int *Code)$/;"	f	file:
AsciiFontInit	fonts/ascii.c	/^static int AsciiFontInit(char *FontFile,unsigned int FontSize)$/;"	f	file:
AsciiGetFontBitmap	fonts/ascii.c	/^static int AsciiGetFontBitmap(unsigned int FontCode,PT_FontBitmap ptFontBitmap)$/;"	f	file:
AsciiInit	fonts/ascii.c	/^int AsciiInit(void)$/;"	f
CC	Makefile	/^CC := $(CROSS_COMPLIE)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS := -Wall -O2 -c -g$/;"	m
COLOR_BACKGROUND	include/config.h	9;"	d
COLOR_FOREGROUND	include/config.h	10;"	d
CROSS_COMPLIE	Makefile	/^CROSS_COMPLIE := arm-none-linux-gnueabi-$/;"	m
ClearScreen	include/display_manage.h	/^	int (*ClearScreen)(unsigned int Color);$/;"	m	struct:_DisplayOperate
DBG_PRINTF	include/config.h	13;"	d
DelFontOperateFromEncoding	encoding/encoding_manage.c	/^int DelFontOperateFromEncoding(PT_EncodingOperate ptEncodingOperate, PT_FontOperate ptFontOperate)$/;"	f
DeviceInit	include/display_manage.h	/^	int (*DeviceInit)(void);$/;"	m	struct:_DisplayOperate
DisplayInit	display/display_manage.c	/^int DisplayInit(void)$/;"	f
EncodingInit	encoding/encoding_manage.c	/^int EncodingInit(void)$/;"	f
FBClearScreen	display/fb.c	/^static int FBClearScreen(unsigned int Color)$/;"	f	file:
FBDeviceInit	display/fb.c	/^static int FBDeviceInit(void )$/;"	f	file:
FBInit	display/fb.c	/^int FBInit(void)$/;"	f
FBShowPixel	display/fb.c	/^static int FBShowPixel(int iPenX, int iPenY, unsigned int Color)$/;"	f	file:
FB_DEVICE_NAME	include/config.h	7;"	d
FONTDATAMAX	fonts/ascii.c	6;"	d	file:
FontInit	include/fonts_manage.h	/^	int (*FontInit)(char *FontFile,unsigned int FontSize);$/;"	m	struct:_FontOperate
FontsInit	fonts/fonts_manage.c	/^int FontsInit(void)$/;"	f
FreeTypeFontInit	fonts/freetype.c	/^static int FreeTypeFontInit(char *FontFile,unsigned int FontSize)$/;"	f	file:
FreeTypeGetFontBitmap	fonts/freetype.c	/^static int FreeTypeGetFontBitmap(unsigned int FontCode,PT_FontBitmap ptFontBitmap)$/;"	f	file:
FreeTypeInit	fonts/freetype.c	/^int FreeTypeInit(void)$/;"	f
GBKFontInit	fonts/gbk.c	/^static int GBKFontInit(char *FontFile,unsigned int FontSize)$/;"	f	file:
GBKGetFontBitmap	fonts/gbk.c	/^static int GBKGetFontBitmap(unsigned int FontCode, PT_FontBitmap ptFontBitmap)$/;"	f	file:
GBKInit	fonts/gbk.c	/^int GBKInit(void)$/;"	f
GetCodeFromBuf	include/encoding_manage.h	/^	int (*GetCodeFromBuf)(unsigned char *pucStartBuf, unsigned char *pucEndBuf, unsigned int *Code);$/;"	m	struct:_EncodingOperate
GetDisplayOperate	display/display_manage.c	/^PT_DisplayOperate GetDisplayOperate(char *Name)$/;"	f
GetFontBitmap	include/fonts_manage.h	/^	int (*GetFontBitmap)(unsigned int FontCode, PT_FontBitmap ptFontBitmap);$/;"	m	struct:_FontOperate
GetFontOperate	fonts/fonts_manage.c	/^PT_FontOperate GetFontOperate(char *name)$/;"	f
GetPreOneBits	encoding/utf-8.c	/^static int GetPreOneBits(unsigned char ucVal)$/;"	f	file:
IncLcdX	draw/draw.c	/^static inline int IncLcdX(int x)$/;"	f	file:
IncLcdY	draw/draw.c	/^static inline int IncLcdY(int y)$/;"	f	file:
Initialize	main.c	/^int Initialize(void)$/;"	f
IsAnsiCode	encoding/ansi.c	/^static int IsAnsiCode(const char *pucBufHead)$/;"	f	file:
IsSupport	include/encoding_manage.h	/^	int (*IsSupport)(const char *pucBufHead);$/;"	m	struct:_EncodingOperate
IsUft16beCode	encoding/utf-16be.c	/^static int IsUft16beCode(const char *pucBufHead)$/;"	f	file:
IsUft16leCode	encoding/utf-16le.c	/^static int IsUft16leCode(const char *pucBufHead)$/;"	f	file:
IsUtf8Coding	encoding/utf-8.c	/^static int IsUtf8Coding(const char *pucBufHead)$/;"	f	file:
LD	Makefile	/^LD := $(CROSS_COMPLIE)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS := -lm -lfreetype  -g$/;"	m
OpenTextFile	draw/draw.c	/^int OpenTextFile(char *FileName)$/;"	f
PT_DisplayOperate	include/display_manage.h	/^}T_DisplayOperate,*PT_DisplayOperate;$/;"	t	typeref:struct:_DisplayOperate
PT_EncodingOperate	include/encoding_manage.h	/^}T_EncodingOperate,*PT_EncodingOperate;$/;"	t	typeref:struct:_EncodingOperate
PT_FontBitmap	include/fonts_manage.h	/^}T_FontBitmap,*PT_FontBitmap;$/;"	t	typeref:struct:_FontBirmap
PT_FontOperate	include/fonts_manage.h	/^}T_FontOperate,*PT_FontOperate;$/;"	t	typeref:struct:_FontOperate
PT_PageDesc	draw/draw.c	/^} T_PageDesc,* PT_PageDesc;$/;"	t	typeref:struct:_PageDesc	file:
RecordPage	draw/draw.c	/^static void RecordPage(PT_PageDesc ptPageNew)$/;"	f	file:
RegisterDisplayOperate	display/display_manage.c	/^int RegisterDisplayOperate(PT_DisplayOperate ptDisplayOperate)$/;"	f
RegisterEncodingOpr	encoding/encoding_manage.c	/^int RegisterEncodingOpr(PT_EncodingOperate ptEncodingOpr)$/;"	f
RegisterFontOperate	fonts/fonts_manage.c	/^int RegisterFontOperate(PT_FontOperate ptFontOparate)$/;"	f
RelocateFontPos	draw/draw.c	/^int RelocateFontPos(PT_FontBitmap ptFontBitmap)$/;"	f
STRING_LEN	main.c	11;"	d	file:
SelectAndInitDisplay	draw/draw.c	/^int SelectAndInitDisplay(char *Name)$/;"	f
SelectEncodingOperate	encoding/encoding_manage.c	/^PT_EncodingOperate SelectEncodingOperate(const char *pucFileHeadBuf)$/;"	f
SetTextDetail	draw/draw.c	/^int SetTextDetail(char *pcHzkFile,char *pcFileFreeType, unsigned int FontSize)$/;"	f
ShowDisplayOperate	display/display_manage.c	/^void ShowDisplayOperate(void)$/;"	f
ShowEncodingOperate	encoding/encoding_manage.c	/^void ShowEncodingOperate(void)$/;"	f
ShowFontOperate	fonts/fonts_manage.c	/^void ShowFontOperate(void)$/;"	f
ShowNextPage	draw/draw.c	/^int ShowNextPage(void)$/;"	f
ShowOneFont	draw/draw.c	/^static int ShowOneFont(PT_FontBitmap ptFontBitmap)$/;"	f	file:
ShowOnePage	draw/draw.c	/^int ShowOnePage(unsigned char *pucTextFileCurPos)$/;"	f
ShowPixel	include/display_manage.h	/^	int (*ShowPixel)(int iPenX,int iPeny, unsigned int Colo);$/;"	m	struct:_DisplayOperate
ShowPrevPage	draw/draw.c	/^int ShowPrevPage(void)$/;"	f
ShowSupportOption	main.c	/^void ShowSupportOption(void)$/;"	f
T_DisplayOperate	include/display_manage.h	/^}T_DisplayOperate,*PT_DisplayOperate;$/;"	t	typeref:struct:_DisplayOperate
T_EncodingOperate	include/encoding_manage.h	/^}T_EncodingOperate,*PT_EncodingOperate;$/;"	t	typeref:struct:_EncodingOperate
T_FontBitmap	include/fonts_manage.h	/^}T_FontBitmap,*PT_FontBitmap;$/;"	t	typeref:struct:_FontBirmap
T_FontOperate	include/fonts_manage.h	/^}T_FontOperate,*PT_FontOperate;$/;"	t	typeref:struct:_FontOperate
T_PageDesc	draw/draw.c	/^} T_PageDesc,* PT_PageDesc;$/;"	t	typeref:struct:_PageDesc	file:
Uft16beEnCodingInit	encoding/utf-16be.c	/^int Uft16beEnCodingInit(void)$/;"	f
Uft16leEnCodingInit	encoding/utf-16le.c	/^int Uft16leEnCodingInit(void)$/;"	f
Uft8EncodingInit	encoding/utf-8.c	/^int Uft8EncodingInit(void)$/;"	f
Utf16beGetCodeFromBuf	encoding/utf-16be.c	/^static int Utf16beGetCodeFromBuf(unsigned char *pucStartBuf, unsigned char *pucEndBuf, unsigned int *Code)$/;"	f	file:
Utf16leGetCodeFromBuf	encoding/utf-16le.c	/^static int Utf16leGetCodeFromBuf(unsigned char *pucStartBuf, unsigned char *pucEndBuf, unsigned int *Code)$/;"	f	file:
Utf8GetCodeFromBuf	encoding/utf-8.c	/^static int Utf8GetCodeFromBuf(unsigned char *pucStartBuf, unsigned char *pucEndBuf, unsigned int *Code)$/;"	f	file:
_DisplayOperate	include/display_manage.h	/^typedef struct _DisplayOperate {$/;"	s
_EncodingOperate	include/encoding_manage.h	/^typedef struct _EncodingOperate {$/;"	s
_FontBirmap	include/fonts_manage.h	/^typedef struct _FontBirmap {$/;"	s
_FontOperate	include/fonts_manage.h	/^typedef struct _FontOperate {$/;"	s
_PageDesc	draw/draw.c	/^typedef struct _PageDesc {$/;"	s	file:
__CONFIG_H__	include/config.h	3;"	d
__DISP_MANAGE_H__	include/display_manage.h	3;"	d
__DRAW_H__	include/draw.h	2;"	d
__ENCODING_MANAGE_H__	include/encoding_manage.h	4;"	d
__FONTS_MANAGE_H__	include/fonts_manage.h	3;"	d
fontdata_8x16	fonts/ascii.c	/^static const unsigned char fontdata_8x16[FONTDATAMAX] = {$/;"	v	file:
g_AnsiEncodingOperate	encoding/ansi.c	/^static T_EncodingOperate g_AnsiEncodingOperate = {$/;"	v	file:
g_AsciiFontOperate	fonts/ascii.c	/^static T_FontOperate g_AsciiFontOperate = {$/;"	v	file:
g_FbScreenSize	display/fb.c	/^static unsigned int g_FbScreenSize;$/;"	v	file:
g_FontSize	draw/draw.c	/^static int g_FontSize;$/;"	v	file:
g_FreeTypeFontOperate	fonts/freetype.c	/^static T_FontOperate g_FreeTypeFontOperate = {$/;"	v	file:
g_GBKFontOperate	fonts/gbk.c	/^static T_FontOperate g_GBKFontOperate = {$/;"	v	file:
g_Uft16beEncodingOperate	encoding/utf-16be.c	/^static T_EncodingOperate g_Uft16beEncodingOperate = {$/;"	v	file:
g_Uft16leEncodingOperate	encoding/utf-16le.c	/^static T_EncodingOperate g_Uft16leEncodingOperate = {$/;"	v	file:
g_fbmem	display/fb.c	/^static unsigned char *g_fbmem;$/;"	v	file:
g_fd_hzk	fonts/gbk.c	/^static int g_fd_hzk;$/;"	v	file:
g_hzk_end_mem	fonts/gbk.c	/^static unsigned char *g_hzk_end_mem;$/;"	v	file:
g_hzk_start_mem	fonts/gbk.c	/^static unsigned char *g_hzk_start_mem;$/;"	v	file:
g_ptCurPage	draw/draw.c	/^static PT_PageDesc g_ptCurPage;$/;"	v	file:
g_ptDisplayOperate	draw/draw.c	/^static PT_DisplayOperate g_ptDisplayOperate;$/;"	v	file:
g_ptDisplayOperateHead	display/display_manage.c	/^static PT_DisplayOperate g_ptDisplayOperateHead;$/;"	v	file:
g_ptEnCodingOperateForFile	draw/draw.c	/^static PT_EncodingOperate g_ptEnCodingOperateForFile;$/;"	v	file:
g_ptEncodingOperateHead	encoding/encoding_manage.c	/^static PT_EncodingOperate g_ptEncodingOperateHead;$/;"	v	file:
g_ptFontOperateHead	fonts/fonts_manage.c	/^static PT_FontOperate g_ptFontOperateHead;$/;"	v	file:
g_ptPages	draw/draw.c	/^static PT_PageDesc g_ptPages;$/;"	v	file:
g_pucLcdFirstPosAtFile	draw/draw.c	/^static unsigned char *g_pucLcdFirstPosAtFile;$/;"	v	file:
g_pucLcdNextPosAtFile	draw/draw.c	/^static unsigned char *g_pucLcdNextPosAtFile;$/;"	v	file:
g_pucTextFileMem	draw/draw.c	/^static unsigned char *g_pucTextFileMem;$/;"	v	file:
g_pucTextFileMemEnd	draw/draw.c	/^static unsigned char *g_pucTextFileMemEnd;$/;"	v	file:
g_tFBDisplayOperate	display/fb.c	/^static T_DisplayOperate g_tFBDisplayOperate = {$/;"	v	file:
g_tFace	fonts/freetype.c	/^static FT_Face       g_tFace;$/;"	v	file:
g_tFix	display/fb.c	/^static struct fb_fix_screeninfo g_tFix;  $/;"	v	typeref:struct:fb_fix_screeninfo	file:
g_tLibrary	fonts/freetype.c	/^static FT_Library    g_tLibrary;$/;"	v	file:
g_tSlot	fonts/freetype.c	/^static FT_GlyphSlot  g_tSlot; $/;"	v	file:
g_tUTF8EncodingOperate	encoding/utf-8.c	/^static T_EncodingOperate g_tUTF8EncodingOperate = {$/;"	v	file:
g_tVar	display/fb.c	/^static struct fb_var_screeninfo g_tVar;   $/;"	v	typeref:struct:fb_var_screeninfo	file:
iBpp	include/display_manage.h	/^	int iBpp;$/;"	m	struct:_DisplayOperate
iBpp	include/fonts_manage.h	/^	int iBpp;$/;"	m	struct:_FontBirmap
iCurOriginX	include/fonts_manage.h	/^	int iCurOriginX;$/;"	m	struct:_FontBirmap
iCurOriginY	include/fonts_manage.h	/^	int iCurOriginY;$/;"	m	struct:_FontBirmap
iHeadLen	include/encoding_manage.h	/^	int iHeadLen;$/;"	m	struct:_EncodingOperate
iNextOriginX	include/fonts_manage.h	/^	int iNextOriginX;$/;"	m	struct:_FontBirmap
iNextOriginY	include/fonts_manage.h	/^	int iNextOriginY;$/;"	m	struct:_FontBirmap
iPage	draw/draw.c	/^	int iPage;$/;"	m	struct:_PageDesc	file:
iPitch	include/fonts_manage.h	/^	int iPitch;$/;"	m	struct:_FontBirmap
iXletf	include/fonts_manage.h	/^	int iXletf;$/;"	m	struct:_FontBirmap
iXmax	include/fonts_manage.h	/^	int iXmax;$/;"	m	struct:_FontBirmap
iXres	include/display_manage.h	/^	int iXres;$/;"	m	struct:_DisplayOperate
iYmax	include/fonts_manage.h	/^	int iYmax;$/;"	m	struct:_FontBirmap
iYres	include/display_manage.h	/^	int iYres;$/;"	m	struct:_DisplayOperate
iYtop	include/fonts_manage.h	/^	int iYtop;$/;"	m	struct:_FontBirmap
main	main.c	/^int main(int argc, char *argv[])$/;"	f
name	include/display_manage.h	/^	char *name;$/;"	m	struct:_DisplayOperate
name	include/encoding_manage.h	/^	char *name;$/;"	m	struct:_EncodingOperate
name	include/fonts_manage.h	/^	char *name;$/;"	m	struct:_FontOperate
ptFontOprSupportHead	include/encoding_manage.h	/^	PT_FontOperate ptFontOprSupportHead;		$/;"	m	struct:_EncodingOperate
ptNext	include/display_manage.h	/^	struct _DisplayOperate *ptNext;$/;"	m	struct:_DisplayOperate	typeref:struct:_DisplayOperate::_DisplayOperate
ptNext	include/encoding_manage.h	/^	struct _EncodingOperate *ptNext;$/;"	m	struct:_EncodingOperate	typeref:struct:_EncodingOperate::_EncodingOperate
ptNext	include/fonts_manage.h	/^	struct _FontOperate *ptNext;$/;"	m	struct:_FontOperate	typeref:struct:_FontOperate::_FontOperate
ptNextPage	draw/draw.c	/^	struct _PageDesc *ptNextPage;$/;"	m	struct:_PageDesc	typeref:struct:_PageDesc::_PageDesc	file:
ptPrevPage	draw/draw.c	/^	struct _PageDesc *ptPrevPage;$/;"	m	struct:_PageDesc	typeref:struct:_PageDesc::_PageDesc	file:
pucBuffer	include/fonts_manage.h	/^	unsigned char *pucBuffer;$/;"	m	struct:_FontBirmap
pucLcdFirstPos	draw/draw.c	/^	unsigned char *pucLcdFirstPos;$/;"	m	struct:_PageDesc	file:
pucLcdNextPageFirstPos	draw/draw.c	/^	unsigned char *pucLcdNextPageFirstPos;$/;"	m	struct:_PageDesc	file:
